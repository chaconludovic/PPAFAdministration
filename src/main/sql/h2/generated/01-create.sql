--
-- (c) Copyright 2005-2012 JAXIO, www.jaxio.com
-- Source code generated by Celerio, a Jaxio product
-- Want to use Celerio within your company? email us at info@jaxio.com
-- Follow us on twitter: @springfuse
-- Template pack-backend-jpa:src/main/sql/h2/01-create.p.vm.sql
--
DROP ALL objects;

CREATE TABLE CONTACT (
	ID INTEGER(10) not null
	,NOM VARCHAR(255) not null
	,PRENOM VARCHAR(255) not null
	,NUMEROTELEPHONE1 VARCHAR(255)
	,NUMEROTELEPHONE2 VARCHAR(255)
	,EMAIL VARCHAR(255) not null
	,ACTIF BOOLEAN(1) not null
	,NOTE CLOB(2147483647)
	,RUE VARCHAR(255)
	,VILLE VARCHAR(255)
	,CODEPOSTAL VARCHAR(255)
	,INFOSUPPL CLOB(2147483647)
	,VERSION INTEGER(10) default 0
);
ALTER TABLE CONTACT ALTER COLUMN ID IDENTITY;

CREATE TABLE FRAIS (
	ID INTEGER(10) not null
	,MONTANT DOUBLE(17) not null
	,DATE DATE not null
	,MODEDEREGLEMENT VARCHAR(255)
	,INFORMATIONREGLEMENT VARCHAR(255)
	,MEMBREPPAF_ID INTEGER(10) not null
	,VERSION INTEGER(10) default 0
);
CREATE INDEX IF NOT EXISTS FK_FRAIS_MEMBREPPAF_INDEX_4
	ON FRAIS (MEMBREPPAF_ID);
ALTER TABLE FRAIS ALTER COLUMN ID IDENTITY;

CREATE TABLE ITEM (
	ID INTEGER(10) not null
	,NOM VARCHAR(255) not null
	,REFERENCE VARCHAR(255) not null
	,NOTE CLOB(2147483647)
	,VERSION INTEGER(10) default 0
);
ALTER TABLE ITEM ALTER COLUMN ID IDENTITY;

CREATE TABLE ITEMLIEUDESTOCKAGE (
	ID INTEGER(10) not null
	,DATE DATE not null
	,QUANTITEENTRE INTEGER(10) not null
	,QUANTITESORTIE INTEGER(10) not null
	,ITEM_ID INTEGER(10) not null
	,LIEUDESTOCKAGE_ID INTEGER(10) not null
	,NOTE CLOB(2147483647)
	,VERSION INTEGER(10) default 0
);
CREATE INDEX IF NOT EXISTS FK_ITEMLIEUDESTOCKAGE_ITEM_INDEX_5
	ON ITEMLIEUDESTOCKAGE (ITEM_ID);
CREATE INDEX IF NOT EXISTS FK_ITEMLIEUDESTOCKAGE_LIEUSTOCKAGE_INDEX_5
	ON ITEMLIEUDESTOCKAGE (LIEUDESTOCKAGE_ID);
ALTER TABLE ITEMLIEUDESTOCKAGE ALTER COLUMN ID IDENTITY;

CREATE TABLE LIEUDEDEPOT (
	ID INTEGER(10) not null
	,NOM VARCHAR(255) not null
	,NUMEROTELEPHONE1 VARCHAR(255)
	,NUMEROTELEPHONE2 VARCHAR(255)
	,RUE VARCHAR(255)
	,VILLE VARCHAR(255)
	,CODEPOSTAL VARCHAR(255)
	,INFOSUPPL CLOB(2147483647)
	,TYPE VARCHAR(255)
	,VERSION INTEGER(10) default 0
);
ALTER TABLE LIEUDEDEPOT ALTER COLUMN ID IDENTITY;

CREATE TABLE LIEUDESTOCKAGE (
	ID INTEGER(10) not null
	,NOM VARCHAR(255) not null
	,MEMBREPPAFRESPONSABLE_ID INTEGER(10) not null
	,RUE VARCHAR(255)
	,VILLE VARCHAR(255)
	,CODEPOSTAL VARCHAR(255)
	,INFOSUPPL CLOB(2147483647)
	,NOTE CLOB(2147483647)
	,VERSION INTEGER(10) default 0
);
CREATE INDEX IF NOT EXISTS FK_LIEUDESTOCKAGE_MEMBREPPAF_INDEX_2
	ON LIEUDESTOCKAGE (MEMBREPPAFRESPONSABLE_ID);
ALTER TABLE LIEUDESTOCKAGE ALTER COLUMN ID IDENTITY;

CREATE TABLE MEMBREPPAF (
	ID INTEGER(10) not null
	,NOM VARCHAR(255) not null
	,PRENOM VARCHAR(255) not null
	,NUMEROTELEPHONE1 VARCHAR(255)
	,NUMEROTELEPHONE2 VARCHAR(255)
	,EMAIL VARCHAR(255)
	,ACTIF BOOLEAN(1) not null
	,NOTE CLOB(2147483647)
	,RUE VARCHAR(255)
	,VILLE VARCHAR(255)
	,CODEPOSTAL VARCHAR(255)
	,INFOSUPPL CLOB(2147483647)
	,ROLEMEMBRE_ID INTEGER(10) not null
	,VERSION INTEGER(10) default 0
);
CREATE INDEX IF NOT EXISTS FK_MEMBREPPAF_ROLEMEMBRE_INDEX_E
	ON MEMBREPPAF (ROLEMEMBRE_ID);
ALTER TABLE MEMBREPPAF ALTER COLUMN ID IDENTITY;

CREATE TABLE ROLE (
	ID INTEGER(10) not null
	,ROLE_NAME VARCHAR(255) not null
	,VERSION INTEGER(10) default 0
);
CREATE UNIQUE INDEX IF NOT EXISTS ROLE_UNIQUE_1_INDEX_2
	ON ROLE (ROLE_NAME);
ALTER TABLE ROLE ALTER COLUMN ID IDENTITY;

CREATE TABLE ROLEMEMBRE (
	ID INTEGER(10) not null
	,ROLE_PPAF VARCHAR(255) not null
	,VERSION INTEGER(10) default 0
);
CREATE UNIQUE INDEX IF NOT EXISTS ROLEMEMBRE_UNIQUE_1_INDEX_A
	ON ROLEMEMBRE (ROLE_PPAF);
ALTER TABLE ROLEMEMBRE ALTER COLUMN ID IDENTITY;

CREATE TABLE SUIVICONTACT (
	ID INTEGER(10) not null
	,DATE DATE not null
	,DATEPROCHAINAPPEL DATE
	,NOTE CLOB(2147483647)
	,CONTACT_ID INTEGER(10) not null
	,MEMBREPPAF_ID INTEGER(10) not null
	,VERSION INTEGER(10) default 0
);
CREATE INDEX IF NOT EXISTS FK_SUIVICONTACT_MEMBREPPAF_INDEX_6
	ON SUIVICONTACT (MEMBREPPAF_ID);
CREATE INDEX IF NOT EXISTS FK_SUIVICONTACT_CONTACT_INDEX_6
	ON SUIVICONTACT (CONTACT_ID);
ALTER TABLE SUIVICONTACT ALTER COLUMN ID IDENTITY;

CREATE TABLE SUIVIDULIEUDEDEPOT (
	ID INTEGER(10) not null
	,DATE DATE not null
	,NOTE CLOB(2147483647)
	,MEMBREPPAF_ID INTEGER(10) not null
	,LIEUDEDEPOT_ID INTEGER(10) not null
	,VERSION INTEGER(10) default 0
);
CREATE INDEX IF NOT EXISTS FK_SUIVIDULIEUDEDEPOT_LIEUDEDEPOT_INDEX_2
	ON SUIVIDULIEUDEDEPOT (LIEUDEDEPOT_ID);
CREATE INDEX IF NOT EXISTS FK_SUIVIDULIEUDEDEPOT_MEMBREPPAF_INDEX_2
	ON SUIVIDULIEUDEDEPOT (MEMBREPPAF_ID);
ALTER TABLE SUIVIDULIEUDEDEPOT ALTER COLUMN ID IDENTITY;

CREATE TABLE UTILISATEUR (
	ID INTEGER(10) not null
	,LOGIN VARCHAR(255) not null
	,PASSWORD VARCHAR(255) not null
	,EMAIL VARCHAR(255) not null
	,RUE VARCHAR(255)
	,VILLE VARCHAR(255)
	,CODEPOSTAL VARCHAR(255)
	,INFOSUPPL CLOB(2147483647)
	,MEMBREPPAF_ID INTEGER(10)
	,ENABLED BOOLEAN(1) not null
	,VERSION INTEGER(10) default 0
);
CREATE INDEX IF NOT EXISTS FK_UTILISATEUR_MEMBREPPAF_INDEX_5
	ON UTILISATEUR (MEMBREPPAF_ID);
ALTER TABLE UTILISATEUR ALTER COLUMN ID IDENTITY;

CREATE TABLE UTILISATEUR_ROLE (
	UTILISATEUR_ID INTEGER(10) not null
	,ROLE_ID INTEGER(10) not null
	,VERSION INTEGER(10) default 0
);
CREATE INDEX IF NOT EXISTS UTILISATEUR_ROLE_FK_1_INDEX_D
	ON UTILISATEUR_ROLE (UTILISATEUR_ID);
CREATE INDEX IF NOT EXISTS UTILISATEUR_ROLE_FK_2_INDEX_D
	ON UTILISATEUR_ROLE (ROLE_ID);
CREATE PRIMARY KEY 
	ON UTILISATEUR_ROLE (ROLE_ID,UTILISATEUR_ID);

CREATE TABLE VENTE (
	ID INTEGER(10) not null
	,DATE DATE not null
	,DATEDENCAISSEMENT DATE
	,QUANTITE INTEGER(10) not null
	,PRIXTOTAL DOUBLE(17) not null
	,FRAISDEPORT DOUBLE(17)
	,NUMERODEFACTURE VARCHAR(255)
	,MODEDEREGLEMENT VARCHAR(255)
	,INFORMATIONREGLEMENT VARCHAR(255)
	,NOTE CLOB(2147483647)
	,ITEM_ID INTEGER(10) not null
	,CONTACT_ID INTEGER(10)
	,LIEUDEDEPOT_ID INTEGER(10)
	,MEMBREPPAF_ID INTEGER(10) not null
	,VERSION INTEGER(10) default 0
);
CREATE INDEX IF NOT EXISTS FK_VENTE_LIEUDEDEPOT_INDEX_4
	ON VENTE (LIEUDEDEPOT_ID);
CREATE INDEX IF NOT EXISTS FK_VENTE_CONTACT_INDEX_4
	ON VENTE (CONTACT_ID);
CREATE INDEX IF NOT EXISTS FK_VENTE_ITEM_INDEX_4
	ON VENTE (ITEM_ID);
CREATE INDEX IF NOT EXISTS FK_VENTE_MEMBREPPAF_INDEX_4
	ON VENTE (MEMBREPPAF_ID);
ALTER TABLE VENTE ALTER COLUMN ID IDENTITY;


ALTER TABLE FRAIS 
	ADD CONSTRAINT FK_FRAIS_MEMBREPPAF
		FOREIGN KEY (MEMBREPPAF_ID)
			REFERENCES MEMBREPPAF (ID);
ALTER TABLE ITEMLIEUDESTOCKAGE 
	ADD CONSTRAINT FK_ITEMLIEUDESTOCKAGE_LIEUSTOCKAGE
		FOREIGN KEY (LIEUDESTOCKAGE_ID)
			REFERENCES LIEUDESTOCKAGE (ID);
ALTER TABLE ITEMLIEUDESTOCKAGE 
	ADD CONSTRAINT FK_ITEMLIEUDESTOCKAGE_ITEM
		FOREIGN KEY (ITEM_ID)
			REFERENCES ITEM (ID);
ALTER TABLE LIEUDESTOCKAGE 
	ADD CONSTRAINT FK_LIEUDESTOCKAGE_MEMBREPPAF
		FOREIGN KEY (MEMBREPPAFRESPONSABLE_ID)
			REFERENCES MEMBREPPAF (ID);
ALTER TABLE MEMBREPPAF 
	ADD CONSTRAINT FK_MEMBREPPAF_ROLEMEMBRE
		FOREIGN KEY (ROLEMEMBRE_ID)
			REFERENCES ROLEMEMBRE (ID);
ALTER TABLE SUIVICONTACT 
	ADD CONSTRAINT FK_SUIVICONTACT_MEMBREPPAF
		FOREIGN KEY (MEMBREPPAF_ID)
			REFERENCES MEMBREPPAF (ID);
ALTER TABLE SUIVICONTACT 
	ADD CONSTRAINT FK_SUIVICONTACT_CONTACT
		FOREIGN KEY (CONTACT_ID)
			REFERENCES CONTACT (ID);
ALTER TABLE SUIVIDULIEUDEDEPOT 
	ADD CONSTRAINT FK_SUIVIDULIEUDEDEPOT_MEMBREPPAF
		FOREIGN KEY (MEMBREPPAF_ID)
			REFERENCES MEMBREPPAF (ID);
ALTER TABLE SUIVIDULIEUDEDEPOT 
	ADD CONSTRAINT FK_SUIVIDULIEUDEDEPOT_LIEUDEDEPOT
		FOREIGN KEY (LIEUDEDEPOT_ID)
			REFERENCES LIEUDEDEPOT (ID);
ALTER TABLE UTILISATEUR 
	ADD CONSTRAINT FK_UTILISATEUR_MEMBREPPAF
		FOREIGN KEY (MEMBREPPAF_ID)
			REFERENCES MEMBREPPAF (ID);
ALTER TABLE UTILISATEUR_ROLE 
	ADD CONSTRAINT UTILISATEUR_ROLE_FK_2
		FOREIGN KEY (ROLE_ID)
			REFERENCES ROLE (ID);
ALTER TABLE UTILISATEUR_ROLE 
	ADD CONSTRAINT UTILISATEUR_ROLE_FK_1
		FOREIGN KEY (UTILISATEUR_ID)
			REFERENCES UTILISATEUR (ID);
ALTER TABLE VENTE 
	ADD CONSTRAINT FK_VENTE_ITEM
		FOREIGN KEY (ITEM_ID)
			REFERENCES ITEM (ID);
ALTER TABLE VENTE 
	ADD CONSTRAINT FK_VENTE_MEMBREPPAF
		FOREIGN KEY (MEMBREPPAF_ID)
			REFERENCES MEMBREPPAF (ID);
ALTER TABLE VENTE 
	ADD CONSTRAINT FK_VENTE_LIEUDEDEPOT
		FOREIGN KEY (LIEUDEDEPOT_ID)
			REFERENCES LIEUDEDEPOT (ID);
ALTER TABLE VENTE 
	ADD CONSTRAINT FK_VENTE_CONTACT
		FOREIGN KEY (CONTACT_ID)
			REFERENCES CONTACT (ID);
