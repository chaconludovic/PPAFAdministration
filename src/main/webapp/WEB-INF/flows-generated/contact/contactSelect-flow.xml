<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 ! Source code generated by Celerio, a Jaxio product
 ! Want to use Celerio within your company? email us at info@jaxio.com
 ! Follow us on twitter: @springfuse
 ! Template pack-jsf2-primefaces:src/main/webapp/WEB-INF/flows/selectFlow.e.vm.xml
-->
<flow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    parent="abstract"
    xmlns="http://www.springframework.org/schema/webflow"
    xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd" >

    <!-- note: this flow inherits from the 'abstract' flow -->

    <persistence-context />

    <var
        name="contactLazyDataModel"
        class="com.eldoraludo.ppafadministration.web.domain.ContactLazyDataModel" />

    <decision-state id="selectChoice" >

        <if
            test="create"
            then="edit" />

        <if
            else="contactSelect"
            test="sub"
            then="contactSubSelect" />
    </decision-state>

    <view-state id="contactSelect" >

        <on-entry>

            <evaluate expression="messageUtil.displayDelayedMessages()" />

            <evaluate expression="persistenceContext.clear()" />
        </on-entry>

        <on-render>

            <evaluate expression="flowsMenuHandler.updateMenu(flowRequestContext,&apos;select&apos;)" />
        </on-render>

        <transition
            on="select"
            to="checkIfAlreadyOpenFlow"
            validate="false" />

        <transition
            on="delete"
            validate="false" >

            <evaluate expression="contactController.delete(contactLazyDataModel.selectedRow)" />
        </transition>

        <transition
            on="sendNew"
            to="edit"
            validate="false" />
    </view-state>

    <view-state
        id="contactSubSelect"
        view="contactSelect.xhtml" >

        <transition
            on="select"
            to="contactSelected"
            validate="false" />
    </view-state>

    <decision-state id="checkIfAlreadyOpenFlow" >

        <if
            else="edit"
            test="flowsMenuHandler.isFlowAlreadyOpen(flowRequestContext,contactLazyDataModel.selectedRow)"
            then="endSwitchToAlreadyOpenFlow" />
    </decision-state>

    <subflow-state
        id="edit"
        subflow="contact/edit" >

        <input
            name="contact"
            value="contactLazyDataModel.selectedRow" />

        <transition
            on="endEdit"
            to="quitChoice" />

        <transition
            on="deleteAndClose"
            to="contactSelect" />
    </subflow-state>

    <decision-state id="quitChoice" >

        <if
            else="contactSelect"
            test="create"
            then="quit" />
    </decision-state>

    <end-state
        id="endSwitchToAlreadyOpenFlow"
        view="externalRedirect:contextRelative:#{flowsMenuHandler.endStateRedirectToAlreadyOpenFlow(flowRequestContext,contactLazyDataModel.selectedRow)}" />

    <end-state id="contactSelected" >

        <output
            name="contactSelected"
            value="contactLazyDataModel.selectedRow" />
    </end-state>

    <global-transitions>

        <transition on="search" >

            <evaluate expression="contactLazyDataModel.onSearch()" />
        </transition>
    </global-transitions>

</flow>