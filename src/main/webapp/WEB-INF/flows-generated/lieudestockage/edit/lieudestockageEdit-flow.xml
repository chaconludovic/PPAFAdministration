<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 ! Source code generated by Celerio, a Jaxio product
 ! Want to use Celerio within your company? email us at info@jaxio.com
 ! Follow us on twitter: @springfuse
 ! Template pack-jsf2-primefaces:src/main/webapp/WEB-INF/flows/edit/editFlow.e.vm.xml
-->
<flow xmlns="http://www.springframework.org/schema/webflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
	parent="abstract/edit">
	
	<!-- note: this flow inherits from the abstract/edit flow -->

	<persistence-context />
	<!-- Flow vars -->
	<var name="tabBean" class="com.eldoraludo.ppafadministration.web.util.TabBean"/>

	<!-- Flow input parameters -->
	<!-- lieudestockage: the entity to edit. If null, then we create it here -->
	<input name="lieudestockage" required="false" value="flowScope.lieudestockage"/>	
	<on-start>
		<evaluate expression="lieudestockageController.newIfNull(lieudestockage)" result="flowScope.lieudestockage" />
	</on-start>

	<decision-state id="startChoice">
		<if test="sub" then="lieudestockageSubEdit" else="lieudestockageEdit" />
	</decision-state>

	<!-- EDIT -->
	<view-state id="lieudestockageEdit" parent="#lieudestockageEditCommon">
		<on-render>
			<evaluate expression="flowsMenuHandler.updateMenu(flowRequestContext,lieudestockage.id,lieudestockageConverter.print(lieudestockage))" />
		</on-render>

		<transition on="send">
			<evaluate expression="messageUtil.info('status_submitted_ok')" />
		</transition>

		<transition on="save">
			<evaluate expression="lieudestockageController.save(lieudestockage)" />
		</transition>

		<transition on="saveAndClose">
			<evaluate expression="lieudestockageController.saveAndClose(lieudestockage)" />
		</transition>

		<transition on="close">
			<evaluate expression="primeFacesUtil.showAskForSaveDialog(persistenceContext,lieudestockage)"/>
		</transition>

		<transition on="deleteAndClose" to="deleteAndClose">
			<evaluate expression="lieudestockageController.delete(lieudestockage)" />
		</transition>
	</view-state>

	<!-- SUB-EDIT -->
	<view-state id="lieudestockageSubEdit" view="lieudestockageEdit.xhtml" parent="#lieudestockageEditCommon">
		<transition on="ok">
			<evaluate expression="primeFacesUtil.forceClose()" />
		</transition>
		<transition on="cancel" to="cancelEdit" />
	</view-state>

	<!-- COMMON-EDIT -->
	<view-state id="lieudestockageEditCommon">
		<on-entry>
			<!-- Prefetch one to many lists and convert them to dataModel -->
			<evaluate expression="lieudestockage.itemlieudestockages" result="flowScope.itemlieudestockages" result-type="dataModel" />
		</on-entry>

		<!-- membreppafresponsable transitions (x-to-one) -->
		<transition on="selectMembreppafresponsable" to="selectMembreppafresponsable" />
		<transition on="editMembreppafresponsable" to="editMembreppafresponsable">
			<set name="requestScope.paramReadonly" value="false" type="boolean" />
		</transition>
		<transition on="viewMembreppafresponsable" to="editMembreppafresponsable">
			<set name="requestScope.paramReadonly" value="true" type="boolean" />
		</transition>

		<!-- itemlieudestockages transitions (one-to-many) -->
		<transition on="addItemlieudestockage" to="addItemlieudestockage" />
		<transition on="editItemlieudestockage" to="editItemlieudestockage">
			<set name="requestScope.paramReadonly" value="false" type="boolean" />
		</transition>
		<transition on="viewItemlieudestockage" to="editItemlieudestockage">
			<set name="requestScope.paramReadonly" value="true" type="boolean" />
		</transition>
		<transition on="removeItemlieudestockage">
			<evaluate expression="lieudestockage.removeItemlieudestockage(flowScope.itemlieudestockages.selectedRow)" />
			<evaluate expression="messageUtil.info('status_removed_ok',resourceBundle.lieudestockage_itemlieudestockages)" />
		</transition>
	</view-state>

	<!-- SUBFLOW membreppafresponsable (x-to-one) -->
	<subflow-state id="selectMembreppafresponsable" subflow="membreppaf">
		<input name="sub" value="true" />
		<transition on="membreppafSelected" to="startChoice">
			<evaluate expression="lieudestockage.setMembreppafresponsable(currentEvent.attributes.membreppafSelected)" />
			<evaluate expression="messageUtil.info('status_selected_ok',resourceBundle.lieudestockage_membreppafresponsable)" />
		</transition>
		<transition on="cancel" to="startChoice" />
	</subflow-state>
	<subflow-state id="editMembreppafresponsable" subflow="membreppaf/edit">
		<input name="sub" value="true" />
		<input name="readonly" value="requestScope.paramReadonly" />
		<input name="membreppaf" value="lieudestockage.membreppafresponsable" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="messageUtil.info('status_edited_ok',resourceBundle.lieudestockage_membreppafresponsable)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>


	<!-- SUBFLOW itemlieudestockages (one-to-many) -->
	<subflow-state id="addItemlieudestockage" subflow="itemlieudestockage/edit">
		<input name="sub" value="true" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="lieudestockage.addItemlieudestockage(currentEvent.attributes.itemlieudestockage)" />
			<evaluate expression="messageUtil.info('status_added_new_ok',resourceBundle.lieudestockage_itemlieudestockages)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>
	<subflow-state id="editItemlieudestockage" subflow="itemlieudestockage/edit">
		<input name="sub" value="true" />
		<input name="readonly" value="requestScope.paramReadonly" />
		<input name="itemlieudestockage" value="flowScope.itemlieudestockages.selectedRow" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="messageUtil.info('status_edited_ok',resourceBundle.lieudestockage_itemlieudestockages)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>

	<end-state id="endEdit">
		<output name="lieudestockage" value="lieudestockage" />
	</end-state>
</flow>