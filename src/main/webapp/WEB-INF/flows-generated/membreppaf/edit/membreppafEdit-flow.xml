<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 ! Source code generated by Celerio, a Jaxio product
 ! Want to use Celerio within your company? email us at info@jaxio.com
 ! Follow us on twitter: @springfuse
 ! Template pack-jsf2-primefaces:src/main/webapp/WEB-INF/flows/edit/editFlow.e.vm.xml
-->
<flow xmlns="http://www.springframework.org/schema/webflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
	parent="abstract/edit">
	
	<!-- note: this flow inherits from the abstract/edit flow -->

	<persistence-context />
	<!-- Flow vars -->
	<var name="tabBean" class="com.eldoraludo.ppafadministration.web.util.TabBean"/>

	<!-- Flow input parameters -->
	<!-- membreppaf: the entity to edit. If null, then we create it here -->
	<input name="membreppaf" required="false" value="flowScope.membreppaf"/>	
	<on-start>
		<evaluate expression="membreppafController.newIfNull(membreppaf)" result="flowScope.membreppaf" />
	</on-start>

	<decision-state id="startChoice">
		<if test="sub" then="membreppafSubEdit" else="membreppafEdit" />
	</decision-state>

	<!-- EDIT -->
	<view-state id="membreppafEdit" parent="#membreppafEditCommon">
		<on-render>
			<evaluate expression="flowsMenuHandler.updateMenu(flowRequestContext,membreppaf.id,membreppafConverter.print(membreppaf))" />
		</on-render>

		<transition on="send">
			<evaluate expression="messageUtil.info('status_submitted_ok')" />
		</transition>

		<transition on="save">
			<evaluate expression="membreppafController.save(membreppaf)" />
		</transition>

		<transition on="saveAndClose">
			<evaluate expression="membreppafController.saveAndClose(membreppaf)" />
		</transition>

		<transition on="close">
			<evaluate expression="primeFacesUtil.showAskForSaveDialog(persistenceContext,membreppaf)"/>
		</transition>

		<transition on="deleteAndClose" to="deleteAndClose">
			<evaluate expression="membreppafController.delete(membreppaf)" />
		</transition>
	</view-state>

	<!-- SUB-EDIT -->
	<view-state id="membreppafSubEdit" view="membreppafEdit.xhtml" parent="#membreppafEditCommon">
		<transition on="ok">
			<evaluate expression="primeFacesUtil.forceClose()" />
		</transition>
		<transition on="cancel" to="cancelEdit" />
	</view-state>

	<!-- COMMON-EDIT -->
	<view-state id="membreppafEditCommon">
		<on-entry>
			<!-- Prefetch one to many lists and convert them to dataModel -->
			<evaluate expression="membreppaf.utilisateurs" result="flowScope.utilisateurs" result-type="dataModel" />
			<evaluate expression="membreppaf.suivicontacts" result="flowScope.suivicontacts" result-type="dataModel" />
			<evaluate expression="membreppaf.suividulieudedepots" result="flowScope.suividulieudedepots" result-type="dataModel" />
			<evaluate expression="membreppaf.ventes" result="flowScope.ventes" result-type="dataModel" />
			<evaluate expression="membreppaf.fraiss" result="flowScope.fraiss" result-type="dataModel" />
		</on-entry>

		<!-- rolemembre transitions (x-to-one) -->
		<transition on="selectRolemembre" to="selectRolemembre" />
		<transition on="editRolemembre" to="editRolemembre">
			<set name="requestScope.paramReadonly" value="false" type="boolean" />
		</transition>
		<transition on="viewRolemembre" to="editRolemembre">
			<set name="requestScope.paramReadonly" value="true" type="boolean" />
		</transition>

		<!-- utilisateurs transitions (one-to-many) -->
		<transition on="addUtilisateur" to="addUtilisateur" />
		<transition on="editUtilisateur" to="editUtilisateur">
			<set name="requestScope.paramReadonly" value="false" type="boolean" />
		</transition>
		<transition on="viewUtilisateur" to="editUtilisateur">
			<set name="requestScope.paramReadonly" value="true" type="boolean" />
		</transition>
		<transition on="removeUtilisateur">
			<evaluate expression="membreppaf.removeUtilisateur(flowScope.utilisateurs.selectedRow)" />
			<evaluate expression="messageUtil.info('status_removed_ok',resourceBundle.membreppaf_utilisateurs)" />
		</transition>

		<!-- suivicontacts transitions (one-to-many) -->
		<transition on="addSuivicontact" to="addSuivicontact" />
		<transition on="editSuivicontact" to="editSuivicontact">
			<set name="requestScope.paramReadonly" value="false" type="boolean" />
		</transition>
		<transition on="viewSuivicontact" to="editSuivicontact">
			<set name="requestScope.paramReadonly" value="true" type="boolean" />
		</transition>
		<transition on="removeSuivicontact">
			<evaluate expression="membreppaf.removeSuivicontact(flowScope.suivicontacts.selectedRow)" />
			<evaluate expression="messageUtil.info('status_removed_ok',resourceBundle.membreppaf_suivicontacts)" />
		</transition>

		<!-- suividulieudedepots transitions (one-to-many) -->
		<transition on="addSuividulieudedepot" to="addSuividulieudedepot" />
		<transition on="editSuividulieudedepot" to="editSuividulieudedepot">
			<set name="requestScope.paramReadonly" value="false" type="boolean" />
		</transition>
		<transition on="viewSuividulieudedepot" to="editSuividulieudedepot">
			<set name="requestScope.paramReadonly" value="true" type="boolean" />
		</transition>
		<transition on="removeSuividulieudedepot">
			<evaluate expression="membreppaf.removeSuividulieudedepot(flowScope.suividulieudedepots.selectedRow)" />
			<evaluate expression="messageUtil.info('status_removed_ok',resourceBundle.membreppaf_suividulieudedepots)" />
		</transition>

		<!-- ventes transitions (one-to-many) -->
		<transition on="addVente" to="addVente" />
		<transition on="editVente" to="editVente">
			<set name="requestScope.paramReadonly" value="false" type="boolean" />
		</transition>
		<transition on="viewVente" to="editVente">
			<set name="requestScope.paramReadonly" value="true" type="boolean" />
		</transition>
		<transition on="removeVente">
			<evaluate expression="membreppaf.removeVente(flowScope.ventes.selectedRow)" />
			<evaluate expression="messageUtil.info('status_removed_ok',resourceBundle.membreppaf_ventes)" />
		</transition>

		<!-- fraiss transitions (one-to-many) -->
		<transition on="addFrais" to="addFrais" />
		<transition on="editFrais" to="editFrais">
			<set name="requestScope.paramReadonly" value="false" type="boolean" />
		</transition>
		<transition on="viewFrais" to="editFrais">
			<set name="requestScope.paramReadonly" value="true" type="boolean" />
		</transition>
		<transition on="removeFrais">
			<evaluate expression="membreppaf.removeFrais(flowScope.fraiss.selectedRow)" />
			<evaluate expression="messageUtil.info('status_removed_ok',resourceBundle.membreppaf_fraiss)" />
		</transition>
	</view-state>

	<!-- SUBFLOW rolemembre (x-to-one) -->
	<subflow-state id="selectRolemembre" subflow="rolemembre">
		<input name="sub" value="true" />
		<transition on="rolemembreSelected" to="startChoice">
			<evaluate expression="membreppaf.setRolemembre(currentEvent.attributes.rolemembreSelected)" />
			<evaluate expression="messageUtil.info('status_selected_ok',resourceBundle.membreppaf_rolemembre)" />
		</transition>
		<transition on="cancel" to="startChoice" />
	</subflow-state>
	<subflow-state id="editRolemembre" subflow="rolemembre/edit">
		<input name="sub" value="true" />
		<input name="readonly" value="requestScope.paramReadonly" />
		<input name="rolemembre" value="membreppaf.rolemembre" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="messageUtil.info('status_edited_ok',resourceBundle.membreppaf_rolemembre)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>


	<!-- SUBFLOW utilisateurs (one-to-many) -->
	<subflow-state id="addUtilisateur" subflow="utilisateur/edit">
		<input name="sub" value="true" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="membreppaf.addUtilisateur(currentEvent.attributes.utilisateur)" />
			<evaluate expression="messageUtil.info('status_added_new_ok',resourceBundle.membreppaf_utilisateurs)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>
	<subflow-state id="editUtilisateur" subflow="utilisateur/edit">
		<input name="sub" value="true" />
		<input name="readonly" value="requestScope.paramReadonly" />
		<input name="utilisateur" value="flowScope.utilisateurs.selectedRow" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="messageUtil.info('status_edited_ok',resourceBundle.membreppaf_utilisateurs)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>


	<!-- SUBFLOW suivicontacts (one-to-many) -->
	<subflow-state id="addSuivicontact" subflow="suivicontact/edit">
		<input name="sub" value="true" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="membreppaf.addSuivicontact(currentEvent.attributes.suivicontact)" />
			<evaluate expression="messageUtil.info('status_added_new_ok',resourceBundle.membreppaf_suivicontacts)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>
	<subflow-state id="editSuivicontact" subflow="suivicontact/edit">
		<input name="sub" value="true" />
		<input name="readonly" value="requestScope.paramReadonly" />
		<input name="suivicontact" value="flowScope.suivicontacts.selectedRow" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="messageUtil.info('status_edited_ok',resourceBundle.membreppaf_suivicontacts)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>


	<!-- SUBFLOW suividulieudedepots (one-to-many) -->
	<subflow-state id="addSuividulieudedepot" subflow="suividulieudedepot/edit">
		<input name="sub" value="true" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="membreppaf.addSuividulieudedepot(currentEvent.attributes.suividulieudedepot)" />
			<evaluate expression="messageUtil.info('status_added_new_ok',resourceBundle.membreppaf_suividulieudedepots)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>
	<subflow-state id="editSuividulieudedepot" subflow="suividulieudedepot/edit">
		<input name="sub" value="true" />
		<input name="readonly" value="requestScope.paramReadonly" />
		<input name="suividulieudedepot" value="flowScope.suividulieudedepots.selectedRow" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="messageUtil.info('status_edited_ok',resourceBundle.membreppaf_suividulieudedepots)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>


	<!-- SUBFLOW ventes (one-to-many) -->
	<subflow-state id="addVente" subflow="vente/edit">
		<input name="sub" value="true" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="membreppaf.addVente(currentEvent.attributes.vente)" />
			<evaluate expression="messageUtil.info('status_added_new_ok',resourceBundle.membreppaf_ventes)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>
	<subflow-state id="editVente" subflow="vente/edit">
		<input name="sub" value="true" />
		<input name="readonly" value="requestScope.paramReadonly" />
		<input name="vente" value="flowScope.ventes.selectedRow" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="messageUtil.info('status_edited_ok',resourceBundle.membreppaf_ventes)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>


	<!-- SUBFLOW fraiss (one-to-many) -->
	<subflow-state id="addFrais" subflow="frais/edit">
		<input name="sub" value="true" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="membreppaf.addFrais(currentEvent.attributes.frais)" />
			<evaluate expression="messageUtil.info('status_added_new_ok',resourceBundle.membreppaf_fraiss)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>
	<subflow-state id="editFrais" subflow="frais/edit">
		<input name="sub" value="true" />
		<input name="readonly" value="requestScope.paramReadonly" />
		<input name="frais" value="flowScope.fraiss.selectedRow" />
		<transition on="endEdit" to="startChoice">
			<evaluate expression="messageUtil.info('status_edited_ok',resourceBundle.membreppaf_fraiss)" />
		</transition>
		<transition on="cancelEdit" to="startChoice" />
	</subflow-state>

	<end-state id="endEdit">
		<output name="membreppaf" value="membreppaf" />
	</end-state>
</flow>